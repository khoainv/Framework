@model SSD.Web.Mvc.Models.GroupViewModel

@{
    ViewBag.Title = "Edit For Group";
}

<h4>@ViewBag.Title</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#TabMain">Main</a></li>
            <li><a data-toggle="tab" href="#TabPermissions">Permissions</a></li>
            <li><a data-toggle="tab" href="#TabPermissionsChildren">Permissions with Parent</a></li>
            <li><a data-toggle="tab" href="#TabUsers">Users with Children Group</a></li>
        </ul>
        <div class="tab-content">
            <div id="TabMain" class="tab-pane fade in active">
                <br />
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ParentId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div id="TabPermissions" class="tab-pane fade">
                <br />
                <table class="table">
                    <tr>
                        <th></th>
                        <th>
                            @Html.DisplayNameFor(model => model.PermissionsList.FirstOrDefault().AcctionKey)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PermissionsList.FirstOrDefault().Description)
                        </th>
                    </tr>
                    @if (Model.PermissionsList != null)
                    {
                        foreach (var group in Model.PermissionsList.GroupBy(x => x.ControllerKey))
                        {
                            <tr class="group-header">
                                <td colspan="3">
                                    <span class="h4">@group.Key.Replace("Controller", "")</span>
                                </td>
                            </tr>
                            foreach (var item in group)
                            {
                                <tr class="odd">
                                    <td>
                                        <input type="checkbox" name="SelectedPermision" value="@item.Id" checked="@item.Selected" class="checkbox-inline" />
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.AcctionKey)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Description)
                                    </td>
                                </tr>
                            }
                        }
                    }
                </table>
            </div>
            <div id="TabPermissionsChildren" class="tab-pane fade">
                <br />
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.PermissionsList.FirstOrDefault().AcctionKey)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PermissionsList.FirstOrDefault().Description)
                        </th>
                    </tr>
                    @if (Model.PermissionsList != null)
                    {
                        foreach (var group in Model.PermissionsList.GroupBy(x => x.ControllerKey))
                        {
                            <tr class="group-header">
                                <td colspan="2">
                                    <span class="h4">@group.Key.Replace("Controller", "")</span>
                                </td>
                            </tr>
                            foreach (var item in group)
                            {
                                <tr class="odd">
                                    <td>
                                        @Html.DisplayFor(modelItem => item.AcctionKey)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Description)
                                    </td>
                                </tr>
                            }
                        }
                    }
                </table>
            </div>
            <div id="TabUsers" class="tab-pane fade">
                <br />
                <table class="table">
                    @foreach (var item in Model.AllUsersInGroupList)
                    {
                        <tr>
                            <td>
                                @item.UserName
                            </td>
                            <td>
                                @Html.ActionLink("View", "ViewUser", "Users", routeValues: new { area = "Admin", username = item.UserName }, htmlAttributes: null)
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
        (function ($) {
            $(function () {
                $('.group-header').click(function () {
                    $(this).nextUntil('.group-header').toggle();
                });
            });
        })(jQuery);
</script>
            }
