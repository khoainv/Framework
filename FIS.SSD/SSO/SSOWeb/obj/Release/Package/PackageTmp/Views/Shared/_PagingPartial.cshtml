@{
    double _pageCount = ((double)(Model.TotalCount - 1) / Model.PageSize);
    int pageCount = _pageCount - (Math.Round(_pageCount)) != 0 ? (int)(_pageCount + 1) : (int)_pageCount;

    string classNameForNext = Model.CurrentPage >= _pageCount ? "disabled" : string.Empty;
    string classNameForPrevious = Model.CurrentPage == 1 ? "disabled" : string.Empty;
    var dicRoute = new RouteValueDictionary();
    if (Model.RouteValues != null)
    {
        dicRoute = (RouteValueDictionary)Model.RouteValues;
        dicRoute.Add("page", 1);
    }
}
@if (pageCount > 1)
{
    <ul class="pagination">
        <li class="@classNameForPrevious">
            @if (classNameForPrevious == string.Empty)
            {
                dicRoute["page"] = 1;
                @Html.ActionLink("« First", (string)Model.Action, dicRoute)
            }
            else
            {
                <a href="#">« First</a>
            }
        </li>
        @{
            int pagesToShow = Model.PagesToShow;
            int minPage = Math.Max(1, Model.CurrentPage - (pagesToShow / 2));
            int maxPage = Math.Min(pageCount, minPage + pagesToShow);
            if (minPage > 1)
            {
                dicRoute["page"] = minPage - 1;
                <li >@Html.ActionLink("...", (string)Model.Action, dicRoute)</li>
            }

            for (int pages = minPage; pages <= maxPage; pages++)
            {
                dicRoute["page"] = pages;
                //
                //adding active class to current page
                string active = "";
                if (pages == Model.CurrentPage) { active = "active"; }
                <li class="@active">@Html.ActionLink(pages.ToString(), (string)Model.Action, dicRoute)</li>
            }

            if (maxPage < pageCount)
            {
                dicRoute["page"] = maxPage + 1;
                <li >@Html.ActionLink("...", (string)Model.Action, dicRoute)</li>
            }
        }

        <li class="@classNameForNext">
            @if (classNameForNext == string.Empty)
            {
                dicRoute["page"] = pageCount;
                @Html.ActionLink("Last »", (string)Model.Action, dicRoute)}
            else
            {
                <a href="#">Last »</a>
            }
        </li>
    </ul>
}
